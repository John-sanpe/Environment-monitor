                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module lcd1602
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _datax
                                     12 	.globl _com
                                     13 	.globl _WaitBusy
                                     14 	.globl _PX3
                                     15 	.globl _EX3
                                     16 	.globl _IE3
                                     17 	.globl _IT3
                                     18 	.globl _PX2
                                     19 	.globl _EX2
                                     20 	.globl _IE2
                                     21 	.globl _IT2
                                     22 	.globl _TF2
                                     23 	.globl _EXF2
                                     24 	.globl _RCLK
                                     25 	.globl _TCLK
                                     26 	.globl _EXEN2
                                     27 	.globl _TR2
                                     28 	.globl _T2_CT
                                     29 	.globl _CPRL2
                                     30 	.globl _INT2
                                     31 	.globl _INT3
                                     32 	.globl _P4_3
                                     33 	.globl _P4_2
                                     34 	.globl _P4_1
                                     35 	.globl _P4_0
                                     36 	.globl _T2EX
                                     37 	.globl _T2
                                     38 	.globl _PT2
                                     39 	.globl _ET2
                                     40 	.globl _CY
                                     41 	.globl _AC
                                     42 	.globl _F0
                                     43 	.globl _RS1
                                     44 	.globl _RS0
                                     45 	.globl _OV
                                     46 	.globl _F1
                                     47 	.globl _P
                                     48 	.globl _PS
                                     49 	.globl _PT1
                                     50 	.globl _PX1
                                     51 	.globl _PT0
                                     52 	.globl _PX0
                                     53 	.globl _RD
                                     54 	.globl _WR
                                     55 	.globl _T1
                                     56 	.globl _T0
                                     57 	.globl _INT1
                                     58 	.globl _INT0
                                     59 	.globl _TXD
                                     60 	.globl _RXD
                                     61 	.globl _P3_7
                                     62 	.globl _P3_6
                                     63 	.globl _P3_5
                                     64 	.globl _P3_4
                                     65 	.globl _P3_3
                                     66 	.globl _P3_2
                                     67 	.globl _P3_1
                                     68 	.globl _P3_0
                                     69 	.globl _EA
                                     70 	.globl _ES
                                     71 	.globl _ET1
                                     72 	.globl _EX1
                                     73 	.globl _ET0
                                     74 	.globl _EX0
                                     75 	.globl _P2_7
                                     76 	.globl _P2_6
                                     77 	.globl _P2_5
                                     78 	.globl _P2_4
                                     79 	.globl _P2_3
                                     80 	.globl _P2_2
                                     81 	.globl _P2_1
                                     82 	.globl _P2_0
                                     83 	.globl _SM0
                                     84 	.globl _SM1
                                     85 	.globl _SM2
                                     86 	.globl _REN
                                     87 	.globl _TB8
                                     88 	.globl _RB8
                                     89 	.globl _TI
                                     90 	.globl _RI
                                     91 	.globl _P1_7
                                     92 	.globl _P1_6
                                     93 	.globl _P1_5
                                     94 	.globl _P1_4
                                     95 	.globl _P1_3
                                     96 	.globl _P1_2
                                     97 	.globl _P1_1
                                     98 	.globl _P1_0
                                     99 	.globl _TF1
                                    100 	.globl _TR1
                                    101 	.globl _TF0
                                    102 	.globl _TR0
                                    103 	.globl _IE1
                                    104 	.globl _IT1
                                    105 	.globl _IE0
                                    106 	.globl _IT0
                                    107 	.globl _P0_7
                                    108 	.globl _P0_6
                                    109 	.globl _P0_5
                                    110 	.globl _P0_4
                                    111 	.globl _P0_3
                                    112 	.globl _P0_2
                                    113 	.globl _P0_1
                                    114 	.globl _P0_0
                                    115 	.globl _P4
                                    116 	.globl _ISP_CONTR
                                    117 	.globl _ISP_TRIG
                                    118 	.globl _ISP_CMD
                                    119 	.globl _ISP_ADDRL
                                    120 	.globl _ISP_ADDRH
                                    121 	.globl _ISP_DATA
                                    122 	.globl _WDT_CONTR
                                    123 	.globl _TH2
                                    124 	.globl _TL2
                                    125 	.globl _RCAP2H
                                    126 	.globl _RCAP2L
                                    127 	.globl _T2MOD
                                    128 	.globl _T2CON
                                    129 	.globl _XICON
                                    130 	.globl _IPH
                                    131 	.globl _SADDR1
                                    132 	.globl _AUXR1
                                    133 	.globl _AUXR
                                    134 	.globl _B
                                    135 	.globl _ACC
                                    136 	.globl _PSW
                                    137 	.globl _IP
                                    138 	.globl _P3
                                    139 	.globl _IE
                                    140 	.globl _P2
                                    141 	.globl _SBUF
                                    142 	.globl _SCON
                                    143 	.globl _P1
                                    144 	.globl _TH1
                                    145 	.globl _TH0
                                    146 	.globl _TL1
                                    147 	.globl _TL0
                                    148 	.globl _TMOD
                                    149 	.globl _TCON
                                    150 	.globl _PCON
                                    151 	.globl _DPH
                                    152 	.globl _DPL
                                    153 	.globl _SP
                                    154 	.globl _P0
                                    155 	.globl _Lcd1602_Print_PARM_3
                                    156 	.globl _Lcd1602_Print_PARM_2
                                    157 	.globl _Lcd1602_PrintCust_PARM_3
                                    158 	.globl _Lcd1602_PrintCust_PARM_2
                                    159 	.globl _Lcd1602_PrintNumber_PARM_3
                                    160 	.globl _Lcd1602_PrintNumber_PARM_2
                                    161 	.globl _Lcd1602_Init
                                    162 	.globl _Lcd1602_Clean
                                    163 	.globl _Lcd1602_PrintNumber
                                    164 	.globl _Lcd1602_PrintCust
                                    165 	.globl _Lcd1602_Print
                                    166 ;--------------------------------------------------------
                                    167 ; special function registers
                                    168 ;--------------------------------------------------------
                                    169 	.area RSEG    (ABS,DATA)
      000000                        170 	.org 0x0000
                           000080   171 _P0	=	0x0080
                           000081   172 _SP	=	0x0081
                           000082   173 _DPL	=	0x0082
                           000083   174 _DPH	=	0x0083
                           000087   175 _PCON	=	0x0087
                           000088   176 _TCON	=	0x0088
                           000089   177 _TMOD	=	0x0089
                           00008A   178 _TL0	=	0x008a
                           00008B   179 _TL1	=	0x008b
                           00008C   180 _TH0	=	0x008c
                           00008D   181 _TH1	=	0x008d
                           000090   182 _P1	=	0x0090
                           000098   183 _SCON	=	0x0098
                           000099   184 _SBUF	=	0x0099
                           0000A0   185 _P2	=	0x00a0
                           0000A8   186 _IE	=	0x00a8
                           0000B0   187 _P3	=	0x00b0
                           0000B8   188 _IP	=	0x00b8
                           0000D0   189 _PSW	=	0x00d0
                           0000E0   190 _ACC	=	0x00e0
                           0000F0   191 _B	=	0x00f0
                           00008E   192 _AUXR	=	0x008e
                           0000A2   193 _AUXR1	=	0x00a2
                           0000A9   194 _SADDR1	=	0x00a9
                           0000B7   195 _IPH	=	0x00b7
                           0000C0   196 _XICON	=	0x00c0
                           0000C8   197 _T2CON	=	0x00c8
                           0000C9   198 _T2MOD	=	0x00c9
                           0000CA   199 _RCAP2L	=	0x00ca
                           0000CB   200 _RCAP2H	=	0x00cb
                           0000CC   201 _TL2	=	0x00cc
                           0000CD   202 _TH2	=	0x00cd
                           0000E1   203 _WDT_CONTR	=	0x00e1
                           0000E2   204 _ISP_DATA	=	0x00e2
                           0000E3   205 _ISP_ADDRH	=	0x00e3
                           0000E4   206 _ISP_ADDRL	=	0x00e4
                           0000E5   207 _ISP_CMD	=	0x00e5
                           0000E6   208 _ISP_TRIG	=	0x00e6
                           0000E7   209 _ISP_CONTR	=	0x00e7
                           0000E8   210 _P4	=	0x00e8
                                    211 ;--------------------------------------------------------
                                    212 ; special function bits
                                    213 ;--------------------------------------------------------
                                    214 	.area RSEG    (ABS,DATA)
      000000                        215 	.org 0x0000
                           000080   216 _P0_0	=	0x0080
                           000081   217 _P0_1	=	0x0081
                           000082   218 _P0_2	=	0x0082
                           000083   219 _P0_3	=	0x0083
                           000084   220 _P0_4	=	0x0084
                           000085   221 _P0_5	=	0x0085
                           000086   222 _P0_6	=	0x0086
                           000087   223 _P0_7	=	0x0087
                           000088   224 _IT0	=	0x0088
                           000089   225 _IE0	=	0x0089
                           00008A   226 _IT1	=	0x008a
                           00008B   227 _IE1	=	0x008b
                           00008C   228 _TR0	=	0x008c
                           00008D   229 _TF0	=	0x008d
                           00008E   230 _TR1	=	0x008e
                           00008F   231 _TF1	=	0x008f
                           000090   232 _P1_0	=	0x0090
                           000091   233 _P1_1	=	0x0091
                           000092   234 _P1_2	=	0x0092
                           000093   235 _P1_3	=	0x0093
                           000094   236 _P1_4	=	0x0094
                           000095   237 _P1_5	=	0x0095
                           000096   238 _P1_6	=	0x0096
                           000097   239 _P1_7	=	0x0097
                           000098   240 _RI	=	0x0098
                           000099   241 _TI	=	0x0099
                           00009A   242 _RB8	=	0x009a
                           00009B   243 _TB8	=	0x009b
                           00009C   244 _REN	=	0x009c
                           00009D   245 _SM2	=	0x009d
                           00009E   246 _SM1	=	0x009e
                           00009F   247 _SM0	=	0x009f
                           0000A0   248 _P2_0	=	0x00a0
                           0000A1   249 _P2_1	=	0x00a1
                           0000A2   250 _P2_2	=	0x00a2
                           0000A3   251 _P2_3	=	0x00a3
                           0000A4   252 _P2_4	=	0x00a4
                           0000A5   253 _P2_5	=	0x00a5
                           0000A6   254 _P2_6	=	0x00a6
                           0000A7   255 _P2_7	=	0x00a7
                           0000A8   256 _EX0	=	0x00a8
                           0000A9   257 _ET0	=	0x00a9
                           0000AA   258 _EX1	=	0x00aa
                           0000AB   259 _ET1	=	0x00ab
                           0000AC   260 _ES	=	0x00ac
                           0000AF   261 _EA	=	0x00af
                           0000B0   262 _P3_0	=	0x00b0
                           0000B1   263 _P3_1	=	0x00b1
                           0000B2   264 _P3_2	=	0x00b2
                           0000B3   265 _P3_3	=	0x00b3
                           0000B4   266 _P3_4	=	0x00b4
                           0000B5   267 _P3_5	=	0x00b5
                           0000B6   268 _P3_6	=	0x00b6
                           0000B7   269 _P3_7	=	0x00b7
                           0000B0   270 _RXD	=	0x00b0
                           0000B1   271 _TXD	=	0x00b1
                           0000B2   272 _INT0	=	0x00b2
                           0000B3   273 _INT1	=	0x00b3
                           0000B4   274 _T0	=	0x00b4
                           0000B5   275 _T1	=	0x00b5
                           0000B6   276 _WR	=	0x00b6
                           0000B7   277 _RD	=	0x00b7
                           0000B8   278 _PX0	=	0x00b8
                           0000B9   279 _PT0	=	0x00b9
                           0000BA   280 _PX1	=	0x00ba
                           0000BB   281 _PT1	=	0x00bb
                           0000BC   282 _PS	=	0x00bc
                           0000D0   283 _P	=	0x00d0
                           0000D1   284 _F1	=	0x00d1
                           0000D2   285 _OV	=	0x00d2
                           0000D3   286 _RS0	=	0x00d3
                           0000D4   287 _RS1	=	0x00d4
                           0000D5   288 _F0	=	0x00d5
                           0000D6   289 _AC	=	0x00d6
                           0000D7   290 _CY	=	0x00d7
                           0000AD   291 _ET2	=	0x00ad
                           0000BD   292 _PT2	=	0x00bd
                           000090   293 _T2	=	0x0090
                           000091   294 _T2EX	=	0x0091
                           0000E8   295 _P4_0	=	0x00e8
                           0000E9   296 _P4_1	=	0x00e9
                           0000EA   297 _P4_2	=	0x00ea
                           0000EB   298 _P4_3	=	0x00eb
                           0000EA   299 _INT3	=	0x00ea
                           0000EB   300 _INT2	=	0x00eb
                           0000C8   301 _CPRL2	=	0x00c8
                           0000C9   302 _T2_CT	=	0x00c9
                           0000CA   303 _TR2	=	0x00ca
                           0000CB   304 _EXEN2	=	0x00cb
                           0000CC   305 _TCLK	=	0x00cc
                           0000CD   306 _RCLK	=	0x00cd
                           0000CE   307 _EXF2	=	0x00ce
                           0000CF   308 _TF2	=	0x00cf
                           0000C0   309 _IT2	=	0x00c0
                           0000C1   310 _IE2	=	0x00c1
                           0000C2   311 _EX2	=	0x00c2
                           0000C3   312 _PX2	=	0x00c3
                           0000C4   313 _IT3	=	0x00c4
                           0000C5   314 _IE3	=	0x00c5
                           0000C6   315 _EX3	=	0x00c6
                           0000C7   316 _PX3	=	0x00c7
                                    317 ;--------------------------------------------------------
                                    318 ; overlayable register banks
                                    319 ;--------------------------------------------------------
                                    320 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        321 	.ds 8
                                    322 ;--------------------------------------------------------
                                    323 ; internal ram data
                                    324 ;--------------------------------------------------------
                                    325 	.area DSEG    (DATA)
      00002C                        326 _Lcd1602_PrintNumber_PARM_2:
      00002C                        327 	.ds 1
      00002D                        328 _Lcd1602_PrintNumber_PARM_3:
      00002D                        329 	.ds 2
      00002F                        330 _Lcd1602_PrintCust_PARM_2:
      00002F                        331 	.ds 1
      000030                        332 _Lcd1602_PrintCust_PARM_3:
      000030                        333 	.ds 3
      000033                        334 _Lcd1602_Print_PARM_2:
      000033                        335 	.ds 1
      000034                        336 _Lcd1602_Print_PARM_3:
      000034                        337 	.ds 3
                                    338 ;--------------------------------------------------------
                                    339 ; overlayable items in internal ram 
                                    340 ;--------------------------------------------------------
                                    341 	.area	OSEG    (OVR,DATA)
                                    342 ;--------------------------------------------------------
                                    343 ; indirectly addressable internal ram data
                                    344 ;--------------------------------------------------------
                                    345 	.area ISEG    (DATA)
                                    346 ;--------------------------------------------------------
                                    347 ; absolute internal ram data
                                    348 ;--------------------------------------------------------
                                    349 	.area IABS    (ABS,DATA)
                                    350 	.area IABS    (ABS,DATA)
                                    351 ;--------------------------------------------------------
                                    352 ; bit data
                                    353 ;--------------------------------------------------------
                                    354 	.area BSEG    (BIT)
                                    355 ;--------------------------------------------------------
                                    356 ; paged external ram data
                                    357 ;--------------------------------------------------------
                                    358 	.area PSEG    (PAG,XDATA)
                                    359 ;--------------------------------------------------------
                                    360 ; external ram data
                                    361 ;--------------------------------------------------------
                                    362 	.area XSEG    (XDATA)
                                    363 ;--------------------------------------------------------
                                    364 ; absolute external ram data
                                    365 ;--------------------------------------------------------
                                    366 	.area XABS    (ABS,XDATA)
                                    367 ;--------------------------------------------------------
                                    368 ; external initialized ram data
                                    369 ;--------------------------------------------------------
                                    370 	.area XISEG   (XDATA)
                                    371 	.area HOME    (CODE)
                                    372 	.area GSINIT0 (CODE)
                                    373 	.area GSINIT1 (CODE)
                                    374 	.area GSINIT2 (CODE)
                                    375 	.area GSINIT3 (CODE)
                                    376 	.area GSINIT4 (CODE)
                                    377 	.area GSINIT5 (CODE)
                                    378 	.area GSINIT  (CODE)
                                    379 	.area GSFINAL (CODE)
                                    380 	.area CSEG    (CODE)
                                    381 ;--------------------------------------------------------
                                    382 ; global & static initialisations
                                    383 ;--------------------------------------------------------
                                    384 	.area HOME    (CODE)
                                    385 	.area GSINIT  (CODE)
                                    386 	.area GSFINAL (CODE)
                                    387 	.area GSINIT  (CODE)
                                    388 ;--------------------------------------------------------
                                    389 ; Home
                                    390 ;--------------------------------------------------------
                                    391 	.area HOME    (CODE)
                                    392 	.area HOME    (CODE)
                                    393 ;--------------------------------------------------------
                                    394 ; code
                                    395 ;--------------------------------------------------------
                                    396 	.area CSEG    (CODE)
                                    397 ;------------------------------------------------------------
                                    398 ;Allocation info for local variables in function 'WaitBusy'
                                    399 ;------------------------------------------------------------
                                    400 ;temp                      Allocated to registers r7 
                                    401 ;null                      Allocated to registers r5 r6 
                                    402 ;------------------------------------------------------------
                                    403 ;	./src/lcd1602.c:2: uchar WaitBusy()
                                    404 ;	-----------------------------------------
                                    405 ;	 function WaitBusy
                                    406 ;	-----------------------------------------
      000453                        407 _WaitBusy:
                           000007   408 	ar7 = 0x07
                           000006   409 	ar6 = 0x06
                           000005   410 	ar5 = 0x05
                           000004   411 	ar4 = 0x04
                           000003   412 	ar3 = 0x03
                           000002   413 	ar2 = 0x02
                           000001   414 	ar1 = 0x01
                           000000   415 	ar0 = 0x00
                                    416 ;	./src/lcd1602.c:4: uchar temp=1;
      000453 7F 01            [12]  417 	mov	r7,#0x01
                                    418 ;	./src/lcd1602.c:6: Lcd1602Port=0xff;
      000455 75 90 FF         [24]  419 	mov	_P1,#0xff
                                    420 ;	./src/lcd1602.c:7: Lcd1602Rw=1;
                                    421 ;	assignBit
      000458 D2 A6            [12]  422 	setb	_P2_6
                                    423 ;	./src/lcd1602.c:8: Lcd1602Rs=0;
                                    424 ;	assignBit
      00045A C2 A5            [12]  425 	clr	_P2_5
                                    426 ;	./src/lcd1602.c:9: while(temp==1)
      00045C 7D 00            [12]  427 	mov	r5,#0x00
      00045E 7E 00            [12]  428 	mov	r6,#0x00
      000460                        429 00103$:
      000460 BF 01 19         [24]  430 	cjne	r7,#0x01,00105$
                                    431 ;	./src/lcd1602.c:11: Lcd1602E=1;
                                    432 ;	assignBit
      000463 D2 A7            [12]  433 	setb	_P2_7
                                    434 ;	./src/lcd1602.c:12: temp = (Lcd1602Port>>7)&0x01;
      000465 E5 90            [12]  435 	mov	a,_P1
      000467 23               [12]  436 	rl	a
      000468 54 01            [12]  437 	anl	a,#0x01
      00046A FF               [12]  438 	mov	r7,a
                                    439 ;	./src/lcd1602.c:13: Lcd1602E=0;
                                    440 ;	assignBit
      00046B C2 A7            [12]  441 	clr	_P2_7
                                    442 ;	./src/lcd1602.c:14: null++;
      00046D 0D               [12]  443 	inc	r5
      00046E BD 00 01         [24]  444 	cjne	r5,#0x00,00122$
      000471 0E               [12]  445 	inc	r6
      000472                        446 00122$:
                                    447 ;	./src/lcd1602.c:15: if(null==0xfffe)return 1;
      000472 BD FE EB         [24]  448 	cjne	r5,#0xfe,00103$
      000475 BE FF E8         [24]  449 	cjne	r6,#0xff,00103$
      000478 75 82 01         [24]  450 	mov	dpl,#0x01
      00047B 22               [24]  451 	ret
      00047C                        452 00105$:
                                    453 ;	./src/lcd1602.c:17: return 0;
      00047C 75 82 00         [24]  454 	mov	dpl,#0x00
                                    455 ;	./src/lcd1602.c:18: }
      00047F 22               [24]  456 	ret
                                    457 ;------------------------------------------------------------
                                    458 ;Allocation info for local variables in function 'com'
                                    459 ;------------------------------------------------------------
                                    460 ;com                       Allocated to registers r7 
                                    461 ;------------------------------------------------------------
                                    462 ;	./src/lcd1602.c:19: void com(unsigned char com)
                                    463 ;	-----------------------------------------
                                    464 ;	 function com
                                    465 ;	-----------------------------------------
      000480                        466 _com:
      000480 AF 82            [24]  467 	mov	r7,dpl
                                    468 ;	./src/lcd1602.c:21: WaitBusy();
      000482 C0 07            [24]  469 	push	ar7
      000484 12 04 53         [24]  470 	lcall	_WaitBusy
      000487 D0 07            [24]  471 	pop	ar7
                                    472 ;	./src/lcd1602.c:22: Lcd1602Rw=0;
                                    473 ;	assignBit
      000489 C2 A6            [12]  474 	clr	_P2_6
                                    475 ;	./src/lcd1602.c:23: Lcd1602Rs=0;
                                    476 ;	assignBit
      00048B C2 A5            [12]  477 	clr	_P2_5
                                    478 ;	./src/lcd1602.c:24: Lcd1602E=1;
                                    479 ;	assignBit
      00048D D2 A7            [12]  480 	setb	_P2_7
                                    481 ;	./src/lcd1602.c:25: Lcd1602Port=com;
      00048F 8F 90            [24]  482 	mov	_P1,r7
                                    483 ;	./src/lcd1602.c:26: Lcd1602E=0;
                                    484 ;	assignBit
      000491 C2 A7            [12]  485 	clr	_P2_7
                                    486 ;	./src/lcd1602.c:27: }
      000493 22               [24]  487 	ret
                                    488 ;------------------------------------------------------------
                                    489 ;Allocation info for local variables in function 'datax'
                                    490 ;------------------------------------------------------------
                                    491 ;datx                      Allocated to registers r7 
                                    492 ;------------------------------------------------------------
                                    493 ;	./src/lcd1602.c:28: void datax(unsigned char datx)
                                    494 ;	-----------------------------------------
                                    495 ;	 function datax
                                    496 ;	-----------------------------------------
      000494                        497 _datax:
      000494 AF 82            [24]  498 	mov	r7,dpl
                                    499 ;	./src/lcd1602.c:30: WaitBusy();
      000496 C0 07            [24]  500 	push	ar7
      000498 12 04 53         [24]  501 	lcall	_WaitBusy
      00049B D0 07            [24]  502 	pop	ar7
                                    503 ;	./src/lcd1602.c:31: Lcd1602Rw=0;
                                    504 ;	assignBit
      00049D C2 A6            [12]  505 	clr	_P2_6
                                    506 ;	./src/lcd1602.c:32: Lcd1602Rs=1;
                                    507 ;	assignBit
      00049F D2 A5            [12]  508 	setb	_P2_5
                                    509 ;	./src/lcd1602.c:33: Lcd1602E=1;
                                    510 ;	assignBit
      0004A1 D2 A7            [12]  511 	setb	_P2_7
                                    512 ;	./src/lcd1602.c:34: Lcd1602Port=datx;
      0004A3 8F 90            [24]  513 	mov	_P1,r7
                                    514 ;	./src/lcd1602.c:35: Lcd1602E=0;
                                    515 ;	assignBit
      0004A5 C2 A7            [12]  516 	clr	_P2_7
                                    517 ;	./src/lcd1602.c:36: }
      0004A7 22               [24]  518 	ret
                                    519 ;------------------------------------------------------------
                                    520 ;Allocation info for local variables in function 'Lcd1602_Init'
                                    521 ;------------------------------------------------------------
                                    522 ;	./src/lcd1602.c:38: void Lcd1602_Init()
                                    523 ;	-----------------------------------------
                                    524 ;	 function Lcd1602_Init
                                    525 ;	-----------------------------------------
      0004A8                        526 _Lcd1602_Init:
                                    527 ;	./src/lcd1602.c:40: com(0x38);
      0004A8 75 82 38         [24]  528 	mov	dpl,#0x38
      0004AB 12 04 80         [24]  529 	lcall	_com
                                    530 ;	./src/lcd1602.c:41: com(0x0c);
      0004AE 75 82 0C         [24]  531 	mov	dpl,#0x0c
      0004B1 12 04 80         [24]  532 	lcall	_com
                                    533 ;	./src/lcd1602.c:42: com(0x01);
      0004B4 75 82 01         [24]  534 	mov	dpl,#0x01
      0004B7 12 04 80         [24]  535 	lcall	_com
                                    536 ;	./src/lcd1602.c:43: com(0x06);
      0004BA 75 82 06         [24]  537 	mov	dpl,#0x06
                                    538 ;	./src/lcd1602.c:44: }
      0004BD 02 04 80         [24]  539 	ljmp	_com
                                    540 ;------------------------------------------------------------
                                    541 ;Allocation info for local variables in function 'Lcd1602_Clean'
                                    542 ;------------------------------------------------------------
                                    543 ;	./src/lcd1602.c:46: void Lcd1602_Clean()
                                    544 ;	-----------------------------------------
                                    545 ;	 function Lcd1602_Clean
                                    546 ;	-----------------------------------------
      0004C0                        547 _Lcd1602_Clean:
                                    548 ;	./src/lcd1602.c:48: com(0x01);
      0004C0 75 82 01         [24]  549 	mov	dpl,#0x01
                                    550 ;	./src/lcd1602.c:49: }
      0004C3 02 04 80         [24]  551 	ljmp	_com
                                    552 ;------------------------------------------------------------
                                    553 ;Allocation info for local variables in function 'Lcd1602_PrintNumber'
                                    554 ;------------------------------------------------------------
                                    555 ;ey                        Allocated with name '_Lcd1602_PrintNumber_PARM_2'
                                    556 ;ei                        Allocated with name '_Lcd1602_PrintNumber_PARM_3'
                                    557 ;ex                        Allocated to registers r7 
                                    558 ;point                     Allocated to registers r6 
                                    559 ;------------------------------------------------------------
                                    560 ;	./src/lcd1602.c:51: void Lcd1602_PrintNumber(unsigned char ex,unsigned char ey,int ei)
                                    561 ;	-----------------------------------------
                                    562 ;	 function Lcd1602_PrintNumber
                                    563 ;	-----------------------------------------
      0004C6                        564 _Lcd1602_PrintNumber:
      0004C6 AF 82            [24]  565 	mov	r7,dpl
                                    566 ;	./src/lcd1602.c:53: uchar point=0x80;
      0004C8 7E 80            [12]  567 	mov	r6,#0x80
                                    568 ;	./src/lcd1602.c:54: if(ey==1)point|=1<<6;
      0004CA 74 01            [12]  569 	mov	a,#0x01
      0004CC B5 2C 02         [24]  570 	cjne	a,_Lcd1602_PrintNumber_PARM_2,00102$
      0004CF 7E C0            [12]  571 	mov	r6,#0xc0
      0004D1                        572 00102$:
                                    573 ;	./src/lcd1602.c:55: if(ei>=10)ex--;
      0004D1 C3               [12]  574 	clr	c
      0004D2 E5 2D            [12]  575 	mov	a,_Lcd1602_PrintNumber_PARM_3
      0004D4 94 0A            [12]  576 	subb	a,#0x0a
      0004D6 E5 2E            [12]  577 	mov	a,(_Lcd1602_PrintNumber_PARM_3 + 1)
      0004D8 64 80            [12]  578 	xrl	a,#0x80
      0004DA 94 80            [12]  579 	subb	a,#0x80
      0004DC E4               [12]  580 	clr	a
      0004DD 33               [12]  581 	rlc	a
      0004DE FD               [12]  582 	mov	r5,a
      0004DF 70 01            [24]  583 	jnz	00104$
      0004E1 1F               [12]  584 	dec	r7
      0004E2                        585 00104$:
                                    586 ;	./src/lcd1602.c:56: com(point+ex);
      0004E2 EF               [12]  587 	mov	a,r7
      0004E3 2E               [12]  588 	add	a,r6
      0004E4 F5 82            [12]  589 	mov	dpl,a
      0004E6 C0 05            [24]  590 	push	ar5
      0004E8 12 04 80         [24]  591 	lcall	_com
      0004EB D0 05            [24]  592 	pop	ar5
                                    593 ;	./src/lcd1602.c:58: if(ei>=100)return;
      0004ED C3               [12]  594 	clr	c
      0004EE E5 2D            [12]  595 	mov	a,_Lcd1602_PrintNumber_PARM_3
      0004F0 94 64            [12]  596 	subb	a,#0x64
      0004F2 E5 2E            [12]  597 	mov	a,(_Lcd1602_PrintNumber_PARM_3 + 1)
      0004F4 64 80            [12]  598 	xrl	a,#0x80
      0004F6 94 80            [12]  599 	subb	a,#0x80
      0004F8 40 01            [24]  600 	jc	00106$
      0004FA 22               [24]  601 	ret
      0004FB                        602 00106$:
                                    603 ;	./src/lcd1602.c:59: if(ei>=10)
      0004FB ED               [12]  604 	mov	a,r5
                                    605 ;	./src/lcd1602.c:61: datax(0x30+ei/10);
      0004FC 70 31            [24]  606 	jnz	00108$
      0004FE 75 66 0A         [24]  607 	mov	__divsint_PARM_2,#0x0a
      000501 F5 67            [12]  608 	mov	(__divsint_PARM_2 + 1),a
      000503 85 2D 82         [24]  609 	mov	dpl,_Lcd1602_PrintNumber_PARM_3
      000506 85 2E 83         [24]  610 	mov	dph,(_Lcd1602_PrintNumber_PARM_3 + 1)
      000509 12 0F ED         [24]  611 	lcall	__divsint
      00050C AE 82            [24]  612 	mov	r6,dpl
      00050E 74 30            [12]  613 	mov	a,#0x30
      000510 2E               [12]  614 	add	a,r6
      000511 F5 82            [12]  615 	mov	dpl,a
      000513 12 04 94         [24]  616 	lcall	_datax
                                    617 ;	./src/lcd1602.c:62: datax(0x30+ei%10);
      000516 75 66 0A         [24]  618 	mov	__modsint_PARM_2,#0x0a
      000519 75 67 00         [24]  619 	mov	(__modsint_PARM_2 + 1),#0x00
      00051C 85 2D 82         [24]  620 	mov	dpl,_Lcd1602_PrintNumber_PARM_3
      00051F 85 2E 83         [24]  621 	mov	dph,(_Lcd1602_PrintNumber_PARM_3 + 1)
      000522 12 0F B7         [24]  622 	lcall	__modsint
      000525 AE 82            [24]  623 	mov	r6,dpl
      000527 74 30            [12]  624 	mov	a,#0x30
      000529 2E               [12]  625 	add	a,r6
      00052A F5 82            [12]  626 	mov	dpl,a
                                    627 ;	./src/lcd1602.c:63: return;
      00052C 02 04 94         [24]  628 	ljmp	_datax
      00052F                        629 00108$:
                                    630 ;	./src/lcd1602.c:65: datax(0x30+ei);
      00052F AF 2D            [24]  631 	mov	r7,_Lcd1602_PrintNumber_PARM_3
      000531 74 30            [12]  632 	mov	a,#0x30
      000533 2F               [12]  633 	add	a,r7
      000534 F5 82            [12]  634 	mov	dpl,a
                                    635 ;	./src/lcd1602.c:66: }
      000536 02 04 94         [24]  636 	ljmp	_datax
                                    637 ;------------------------------------------------------------
                                    638 ;Allocation info for local variables in function 'Lcd1602_PrintCust'
                                    639 ;------------------------------------------------------------
                                    640 ;ey                        Allocated with name '_Lcd1602_PrintCust_PARM_2'
                                    641 ;ei                        Allocated with name '_Lcd1602_PrintCust_PARM_3'
                                    642 ;ex                        Allocated to registers r7 
                                    643 ;point                     Allocated to registers r6 
                                    644 ;temp                      Allocated to registers r5 
                                    645 ;------------------------------------------------------------
                                    646 ;	./src/lcd1602.c:68: void Lcd1602_PrintCust(unsigned char ex,unsigned char ey,char *ei)
                                    647 ;	-----------------------------------------
                                    648 ;	 function Lcd1602_PrintCust
                                    649 ;	-----------------------------------------
      000539                        650 _Lcd1602_PrintCust:
      000539 AF 82            [24]  651 	mov	r7,dpl
                                    652 ;	./src/lcd1602.c:70: uchar point=0x80;
      00053B 7E 80            [12]  653 	mov	r6,#0x80
                                    654 ;	./src/lcd1602.c:71: com(0x40);
      00053D 75 82 40         [24]  655 	mov	dpl,#0x40
      000540 C0 07            [24]  656 	push	ar7
      000542 C0 06            [24]  657 	push	ar6
      000544 12 04 80         [24]  658 	lcall	_com
      000547 D0 06            [24]  659 	pop	ar6
      000549 D0 07            [24]  660 	pop	ar7
                                    661 ;	./src/lcd1602.c:72: for(uchar temp=0;temp<8;temp++)
      00054B 7D 00            [12]  662 	mov	r5,#0x00
      00054D                        663 00105$:
      00054D BD 08 00         [24]  664 	cjne	r5,#0x08,00122$
      000550                        665 00122$:
      000550 50 27            [24]  666 	jnc	00101$
                                    667 ;	./src/lcd1602.c:74: datax(*(ei+temp));
      000552 ED               [12]  668 	mov	a,r5
      000553 25 30            [12]  669 	add	a,_Lcd1602_PrintCust_PARM_3
      000555 FA               [12]  670 	mov	r2,a
      000556 E4               [12]  671 	clr	a
      000557 35 31            [12]  672 	addc	a,(_Lcd1602_PrintCust_PARM_3 + 1)
      000559 FB               [12]  673 	mov	r3,a
      00055A AC 32            [24]  674 	mov	r4,(_Lcd1602_PrintCust_PARM_3 + 2)
      00055C 8A 82            [24]  675 	mov	dpl,r2
      00055E 8B 83            [24]  676 	mov	dph,r3
      000560 8C F0            [24]  677 	mov	b,r4
      000562 12 0F 9B         [24]  678 	lcall	__gptrget
      000565 F5 82            [12]  679 	mov	dpl,a
      000567 C0 07            [24]  680 	push	ar7
      000569 C0 06            [24]  681 	push	ar6
      00056B C0 05            [24]  682 	push	ar5
      00056D 12 04 94         [24]  683 	lcall	_datax
      000570 D0 05            [24]  684 	pop	ar5
      000572 D0 06            [24]  685 	pop	ar6
      000574 D0 07            [24]  686 	pop	ar7
                                    687 ;	./src/lcd1602.c:72: for(uchar temp=0;temp<8;temp++)
      000576 0D               [12]  688 	inc	r5
      000577 80 D4            [24]  689 	sjmp	00105$
      000579                        690 00101$:
                                    691 ;	./src/lcd1602.c:76: if(ey==1)point|=1<<6;
      000579 74 01            [12]  692 	mov	a,#0x01
      00057B B5 2F 02         [24]  693 	cjne	a,_Lcd1602_PrintCust_PARM_2,00103$
      00057E 7E C0            [12]  694 	mov	r6,#0xc0
      000580                        695 00103$:
                                    696 ;	./src/lcd1602.c:77: com(point+ex);
      000580 EF               [12]  697 	mov	a,r7
      000581 2E               [12]  698 	add	a,r6
      000582 F5 82            [12]  699 	mov	dpl,a
      000584 12 04 80         [24]  700 	lcall	_com
                                    701 ;	./src/lcd1602.c:78: datax(0x00);
      000587 75 82 00         [24]  702 	mov	dpl,#0x00
                                    703 ;	./src/lcd1602.c:79: }
      00058A 02 04 94         [24]  704 	ljmp	_datax
                                    705 ;------------------------------------------------------------
                                    706 ;Allocation info for local variables in function 'Lcd1602_Print'
                                    707 ;------------------------------------------------------------
                                    708 ;ey                        Allocated with name '_Lcd1602_Print_PARM_2'
                                    709 ;ei                        Allocated with name '_Lcd1602_Print_PARM_3'
                                    710 ;ex                        Allocated to registers r7 
                                    711 ;point                     Allocated to registers r6 
                                    712 ;------------------------------------------------------------
                                    713 ;	./src/lcd1602.c:80: void Lcd1602_Print(unsigned char ex,unsigned char ey,char *ei)
                                    714 ;	-----------------------------------------
                                    715 ;	 function Lcd1602_Print
                                    716 ;	-----------------------------------------
      00058D                        717 _Lcd1602_Print:
      00058D AF 82            [24]  718 	mov	r7,dpl
                                    719 ;	./src/lcd1602.c:82: uchar point=0x80;
      00058F 7E 80            [12]  720 	mov	r6,#0x80
                                    721 ;	./src/lcd1602.c:83: if(ey==1)point|=1<<6;
      000591 74 01            [12]  722 	mov	a,#0x01
      000593 B5 33 02         [24]  723 	cjne	a,_Lcd1602_Print_PARM_2,00102$
      000596 7E C0            [12]  724 	mov	r6,#0xc0
      000598                        725 00102$:
                                    726 ;	./src/lcd1602.c:84: com(point+ex);
      000598 EF               [12]  727 	mov	a,r7
      000599 2E               [12]  728 	add	a,r6
      00059A F5 82            [12]  729 	mov	dpl,a
      00059C 12 04 80         [24]  730 	lcall	_com
                                    731 ;	./src/lcd1602.c:85: while(*ei)	
      00059F AD 34            [24]  732 	mov	r5,_Lcd1602_Print_PARM_3
      0005A1 AE 35            [24]  733 	mov	r6,(_Lcd1602_Print_PARM_3 + 1)
      0005A3 AF 36            [24]  734 	mov	r7,(_Lcd1602_Print_PARM_3 + 2)
      0005A5                        735 00103$:
      0005A5 8D 82            [24]  736 	mov	dpl,r5
      0005A7 8E 83            [24]  737 	mov	dph,r6
      0005A9 8F F0            [24]  738 	mov	b,r7
      0005AB 12 0F 9B         [24]  739 	lcall	__gptrget
      0005AE FC               [12]  740 	mov	r4,a
      0005AF 60 18            [24]  741 	jz	00106$
                                    742 ;	./src/lcd1602.c:87: datax(*ei);
      0005B1 8C 82            [24]  743 	mov	dpl,r4
      0005B3 C0 07            [24]  744 	push	ar7
      0005B5 C0 06            [24]  745 	push	ar6
      0005B7 C0 05            [24]  746 	push	ar5
      0005B9 12 04 94         [24]  747 	lcall	_datax
      0005BC D0 05            [24]  748 	pop	ar5
      0005BE D0 06            [24]  749 	pop	ar6
      0005C0 D0 07            [24]  750 	pop	ar7
                                    751 ;	./src/lcd1602.c:88: ei++;
      0005C2 0D               [12]  752 	inc	r5
      0005C3 BD 00 DF         [24]  753 	cjne	r5,#0x00,00103$
      0005C6 0E               [12]  754 	inc	r6
      0005C7 80 DC            [24]  755 	sjmp	00103$
      0005C9                        756 00106$:
                                    757 ;	./src/lcd1602.c:91: }
      0005C9 22               [24]  758 	ret
                                    759 	.area CSEG    (CODE)
                                    760 	.area CONST   (CODE)
                                    761 	.area XINIT   (CODE)
                                    762 	.area CABS    (ABS,CODE)
